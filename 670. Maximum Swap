You are given an integer num. You can swap two digits at most once to get the maximum valued number.

Return the maximum valued number you can get.

 

Example 1:

Input: num = 2736
Output: 7236
Explanation: Swap the number 2 and the number 7.
Example 2:

Input: num = 9973
Output: 9973
Explanation: No swap.
 

Constraints:

0 <= num <= 108

# brute force

class Solution:
    def maximumSwap(self, num: int) -> int:
        A = list(str(num))
        
        ans = A[:]
        for i in range(len(A)-1):
            for j in range(i+1, len(A)):
                A[i], A[j] = A[j], A[i]
                if A > ans:
                    ans = A[:]
                A[i], A[j] = A[j], A[i]
        return int(''.join(ans))


class Solution:
    def maximumSwap(self, num: int) -> int:
        A = list(str(num))
        dt = {}
        for i, n in enumerate(A):
            dt[int(n)] = i
         
        for i, n in enumerate(A):
            for d in range(9, int(n), -1):
                if d in dt and dt[d] > i:
                    A[i], A[dt[d]] = A[dt[d]], A[i]
                    return int(''.join(A))
        return num
            
class Solution:
    def maximumSwap(self, num: int) -> int:
        digits = [int(x) for x in str(num)]
        max_idx = len(digits) - 1
        idx1, idx2 = 0, 0
        
        for i in range(len(digits) -1, -1, -1):
            if digits[i] < digits[max_idx]:
                idx1 = i
                idx2 = max_idx
            elif digits[i] > digits[max_idx]:
                max_idx = i
        
        digits[idx1], digits[idx2] = digits[idx2], digits[idx1]
        return int(''.join([str(x) for x in digits]))
