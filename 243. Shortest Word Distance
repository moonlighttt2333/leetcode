243. Shortest Word Distance

Given an array of strings wordsDict and two different strings that already exist in the array word1 and word2, return the shortest distance between these two words in the list.

 

Example 1:

Input: wordsDict = ["practice", "makes", "perfect", "coding", "makes"], word1 = "coding", word2 = "practice"
Output: 3

class Solution(object):
    def shortestDistance(self, wordsDict, word1, word2):
        """
        :type wordsDict: List[str]
        :type word1: str
        :type word2: str
        :rtype: int
        """
        n1 = []
        n2 = []
        for i, w in enumerate(wordsDict):
            if w == word1:
                n1.append(i)
            elif w == word2:
                n2.append(i)
        min_dis = len(wordsDict)
        for i in n1:
            for j in n2:
                if abs(i - j) < min_dis:
                    min_dis = abs(i - j)
        return min_dis
