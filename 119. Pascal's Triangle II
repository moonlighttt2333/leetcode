Given an integer rowIndex, return the rowIndexth (0-indexed) row of the Pascal's triangle.

In Pascal's triangle, each number is the sum of the two numbers directly above it as shown:


Example 1:

Input: rowIndex = 3
Output: [1,3,3,1]
Example 2:

Input: rowIndex = 0
Output: [1]
Example 3:

Input: rowIndex = 1
Output: [1,1]


class Solution:
    def getRow(self, rowIndex: int) -> List[int]:
        if rowIndex == 0:
            return [1]
        
        if rowIndex == 1:
            return [1, 1]
        
        upper = self.getRow(rowIndex-1)
        ret = [1]
        for i in range(len(upper) - 1):
            ret.append(upper[i] + upper[i+1])
        ret.append(1)
        return ret
        
        
class Solution:
    def getRow(self, rowIndex: int) -> List[int]:
        ret = [1]
        for i in range(rowIndex):
            cur_line = [1]
            for j in range(i):
                cur_line.append(ret[j] + ret[j+1])
            cur_line.append(1)
            ret = cur_line
        return ret
