Convert a non-negative integer num to its English words representation.

 

Example 1:

Input: num = 123
Output: "One Hundred Twenty Three"
Example 2:

Input: num = 12345
Output: "Twelve Thousand Three Hundred Forty Five"
Example 3:

Input: num = 1234567
Output: "One Million Two Hundred Thirty Four Thousand Five Hundred Sixty Seven"
Example 4:

Input: num = 1234567891
Output: "One Billion Two Hundred Thirty Four Million Five Hundred Sixty Seven Thousand Eight Hundred Ninety One"
 



class Solution:
    def digits_to_english(self, d):
        digit_map = {0: 'Zero', 1: 'One', 2: 'Two', 3: 'Three', 4: 'Four', 5: 'Five',
                   6: 'Six', 7: 'Seven', 8: 'Eight', 9: 'Nine', 10: 'Ten',
                    11: 'Eleven', 12: 'Twelve', 13: 'Thirteen', 14: 'Fourteen',
                    15: 'Fifteen', 16: 'Sixteen', 17: 'Seventeen', 18: 'Eighteen',
                    19: 'Nineteen', 20: 'Twenty', 30: 'Thirty', 40: 'Forty',
                    50: 'Fifty', 60: 'Sixty', 70: 'Seventy', 80: 'Eighty', 90: 'Ninety'}
        if d == 0:
            return digit_map[d]

        output = ''
        if d >= 100:
            digit = d // 100
            output += digit_map[digit] + ' Hundred' 
            d = d % 100

        if d >= 10:
            digit = d // 10
            if digit == 1:
                if output:
                    output += ' '
                output += digit_map[d]
                return output
            else:
                if output:
                    output += ' '
                output += digit_map[digit * 10]
                d = d % 10

        if d > 0:
            if output:
                output += ' '
            output += digit_map[d]
        return output

                
    def numberToWords(self, num: int) -> str:
        if num == 0:
            return self.digits_to_english(num)
        
        output = ''
        surfix = ['Billion', 'Million', 'Thousand', '']
        for i in range(4):
            weights = 10 ** ((3 - i) * 3)
            digits = num // weights
            num = num % weights
            if digits > 0:
                if output:
                    output += ' '
                output += self.digits_to_english(digits)
                if surfix[i]:
                    output += ' ' + surfix[i]
        return output
