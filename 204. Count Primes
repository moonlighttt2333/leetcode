Count the number of prime numbers less than a non-negative number, n.

 

Example 1:

Input: n = 10
Output: 4
Explanation: There are 4 prime numbers less than 10, they are 2, 3, 5, 7.
Example 2:

Input: n = 0
Output: 0
Example 3:

Input: n = 1
Output: 0

class Solution:
    def isPrime(self, num):
        if num == 2:
            return True
        if num % 2 == 0:
            return False
        for i in range(2, num):
            if num % i == 0:
                return False
        return True
    
    def countPrimes(self, n: int) -> int:
        if n <= 2:
            return 0
        
        numbers = list(range(n))
        for p in range(2, int(math.sqrt(n))+1):
            if numbers[p] != -1:
                j = p * p
                while j < n:
                    numbers[j] = -1
                    j += p

        return n - 2 - numbers[2:].count(-1)
