Given a non-negative integer x, compute and return the square root of x.

Since the return type is an integer, the decimal digits are truncated, and only the integer part of the result is returned.

Note: You are not allowed to use any built-in exponent function or operator, such as pow(x, 0.5) or x ** 0.5.

 

Example 1:

Input: x = 4
Output: 2
Example 2:

Input: x = 8
Output: 2
Explanation: The square root of 8 is 2.82842..., and since the decimal part is truncated, 2 is returned.


# Solution 1: binary search
class Solution:
    def mySqrt(self, x: int) -> int:
        if x < 2:
            return x
        
        left, right = 2, x // 2
        while left <= right:
            num = int((left + right) / 2)
            guess = num * num
            if guess == x:
                return num
            elif guess < x:
                left = num + 1
            else:
                right = num - 1
        return right
        
        
        
# Solution 2: sqrt(x) = e ^ (1/2 log x)

class Solution:
    def mySqrt(self, x: int) -> int:
        if x < 2:
            return x
        
        left = int(e ** (0.5 * log(x)))
        right = left + 1
        return left if right * right > x else right
        
        
        
# Solution 3: sqrt(x) = 2 * sqrt(x/4)
class Solution:
    def mySqrt(self, x: int) -> int:
        if x < 2:
            return x
        
        left = self.mySqrt(x // 4) * 2
        right = left + 1
        return left if right * right > x else right
        

class Solution:
    def mySqrt(self, x: int) -> int:
        if x < 2:
            return x
        
        left = self.mySqrt(x >> 2) << 1
        right = left + 1
        return left if right * right > x else right
        
# Solution 4: Newton's method
x1 = x0 - f(x0) / f'(x0)
sqrt(a) is equal to the root of y = x^2 - a = 0
x1 = x0 - (x0^2 - a) / (2 * x0)
   = (x0 + a / x0) / 2

class Solution:
    def mySqrt(self, x: int) -> int:
        if x < 2:
            return x
        
        x0 = x // 2
        x1 = (x0 + x / x0) / 2
        while abs(x1 - x0) >= 1:
            x0 = x1
            x1 = (x0 + x / x0) / 2
        return int(x1)
