Given a string s, find the first non-repeating character in it and return its index. If it does not exist, return -1.

 

Example 1:

Input: s = "leetcode"
Output: 0
Example 2:

Input: s = "loveleetcode"
Output: 2
Example 3:

Input: s = "aabb"
Output: -1

class Solution:
    def firstUniqChar(self, s: str) -> int:
        dt = {}
        for i, c in enumerate(s):
            if c not in dt:
                dt[c] = [1, i]
            else:
                dt[c][0] += 1
        
        unique_chars = []
        for k, v in dt.items():
            if v[0] == 1:
                unique_chars.append(v[1])
        if len(unique_chars) > 0:
            return sorted(unique_chars)[0]
        else:
            return -1
