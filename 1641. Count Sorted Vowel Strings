Given an integer n, return the number of strings of length n that consist only of vowels (a, e, i, o, u) and are lexicographically sorted.

A string s is lexicographically sorted if for all valid i, s[i] is the same as or comes before s[i+1] in the alphabet.

 

Example 1:

Input: n = 1
Output: 5
Explanation: The 5 sorted strings that consist of vowels only are ["a","e","i","o","u"].
Example 2:

Input: n = 2
Output: 15
Explanation: The 15 sorted strings that consist of vowels only are
["aa","ae","ai","ao","au","ee","ei","eo","eu","ii","io","iu","oo","ou","uu"].
Note that "ea" is not a valid string since 'e' comes after 'a' in the alphabet.
Example 3:

Input: n = 33
Output: 66045
 
 
 Solution 1: DP, bottom up
 class Solution:
    def countVowelStrings(self, n: int) -> int:
        if n == 1:
            return 5
        prev = [1, 2, 3, 4, 5]
        ans = prev
        for r in range(2, n):
            for i in range(1, 5):
                ans[i] = prev[i] + ans[i-1]
            prev = ans
        return sum(ans)
        
Solution 2: math
Combination with petition

class Solution:
    def countVowelStrings(self, n: int) -> int:
        return (n+4) * (n+3) * (n+2) * (n+1) // 24

        
