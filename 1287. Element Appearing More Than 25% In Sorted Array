Given an integer array sorted in non-decreasing order, there is exactly one integer in the array that occurs more than 25% of the time, return that integer.

 

Example 1:

Input: arr = [1,2,2,6,6,6,6,7,10]
Output: 6
Example 2:

Input: arr = [1,1]
Output: 1


class Solution:
    def findFirstIndex(self, arr: List[int], target) -> int:
        left = 0
        right = len(arr) - 1
        while left <= right:
            mid = (left + right) // 2
            if arr[mid] < target:
                left = mid + 1
            else:
                right = mid - 1
        return left
        
    def findSpecialInteger(self, arr: List[int]) -> int:
        N = len(arr)
        for i in range(4):
            idx = math.ceil(N / 4) * i
            left = self.findFirstIndex(arr, arr[idx])
            if left + N//4 < N and arr[left + N//4] == arr[idx]:
                return arr[idx]

class Solution:
    def findSpecialInteger(self, arr: List[int]) -> int:
        gap = len(arr) // 4
        for i in range(len(arr)):
            if arr[i] == arr[i + gap]:
                return arr[i]
            

