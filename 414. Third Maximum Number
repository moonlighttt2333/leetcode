Given integer array nums, return the third maximum number in this array. If the third maximum does not exist, return the maximum number.

 

Example 1:

Input: nums = [3,2,1]
Output: 1
Explanation: The third maximum is 1.
Example 2:

Input: nums = [1,2]
Output: 2
Explanation: The third maximum does not exist, so the maximum (2) is returned instead.
Example 3:

Input: nums = [2,2,3,1]
Output: 1
Explanation: Note that the third maximum here means the third maximum distinct number.
Both numbers with value 2 are both considered as second maximum.

class Solution:
    def thirdMax(self, nums: List[int]) -> int:
        if len(nums) <= 2:
            return max(nums)
        
        max_1, max_2, max_3 = float("-inf"), float("-inf"), float("-inf")
        for n in nums:
            if n > max_1:
                max_3 = max_2
                max_2 = max_1
                max_1 = n
            elif n < max_1 and n > max_2:
                max_3 = max_2
                max_2 = n
            elif n < max_2 and n > max_3:
                max_3 = n
        if max_3 != float("-inf"):
            return max_3
        else:
            return max_1
                
        
