Merge two sorted linked lists and return it as a sorted list. The list should be made by splicing together the nodes of the first two lists.

Input: l1 = [1,2,4], l2 = [1,3,4]
Output: [1,1,2,3,4,4]
Example 2:

Input: l1 = [], l2 = []
Output: []

# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def mergeTwoLists(self, l1: ListNode, l2: ListNode) -> ListNode:
        if not l1:
            return l2
        if not l2:
            return l1
        
        p1 = l1
        p2 = l2
        ret = ListNode()
        pre = ret
        while p1 and p2:
            if p1.val >= p2.val:
                ret.next = ListNode(p2.val)
                p2 = p2.next
            else:
                ret.next = ListNode(p1.val)
                p1 = p1.next
            ret = ret.next
        if p1:
            ret.next = p1
        if p2:
            ret.next = p2
        return pre.next
